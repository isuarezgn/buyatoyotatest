var seLogo,
    logoImage,
    seriesName,
    seriesImage,
    badgeImage,
    modelYear,
    modelTrim,
    incentiveType,
    disclaimer,
    AprTerm,
    termLength,
    leaseMonthlyPayment,
    leaseDAS,
    leaseTerm,
    cashback,
	regionName,
    custom;

var arr = ['noseries', 'notargetaudience', 'conversion', 'nomatch', ''];

var loadingList = [];

var timer;

function initAdkit(){
    adkit.onReady(startAd);
}
        
function handleDynamicData(){
    seLogo = adkit.getSVData("seLogo");   
    seriesName = adkit.getSVData("seriesName");
    seriesImage = adkit.getSVData("seriesImage");
    badgeImage = adkit.getSVData("badgeImage");
    modelYear = adkit.getSVData("modelYear");
    modelTrim = adkit.getSVData("modelTrim");
    incentiveType = adkit.getSVData("incentiveType");
    disclaimer = adkit.getSVData("disclaimer");
    aprTerm = adkit.getSVData("aprTerm");
    termLength = "60";
    leaseMonthlyPayment = adkit.getSVData("leaseMonthlyPayment");
    leaseDAS = adkit.getSVData("leaseDAS");
    leaseTerm = adkit.getSVData("leaseTerm");
    cashback = adkit.getSVData("cashback");
    custom = adkit.getSVData("custom");
	regionName = adkit.getSVData("regionName");
	//termLength = adkit.getSVData("termLength");

	// if the regionName is empty use the seriesImage to get it
	regionName = regionName != "" ? regionName :
		checkStrFor(seriesImage, "NE_300") ? "BOS10" :
		checkStrFor(seriesImage, "CN_300") ? "CIN10" :
		checkStrFor(seriesImage, "WW_300") ? "WW10" :
		checkStrFor(seriesImage, "CAT_300") ? "CAT10" :
		checkStrFor(seriesImage, "NC_300") ? "NCA10" :
		checkStrFor(seriesImage, "SC_300") ? "SOC10" :
		checkStrFor(seriesImage, "SD_300") ? "SD10" :
		undefined;
		
	//clean series name
	if(seriesName.indexOf("Hybrid")>-1 || seriesName.indexOf("Plug In")>-1){
		seriesName = seriesName.replace(/\s\w+/ig, "");
	}

	//figure out aprterm for 1.0,+1.9,2.0 pattern but only of it exists like that
	if(checkStrFor(aprTerm, "+")) specialApr();
}

function checkStrFor(str){
	for (var i = 1; i < arguments.length; i++){
		if(str.indexOf(arguments[i]) > -1) return true;
	}
	return false;
}
   
function specialApr(){
	aprTermArr = aprTerm.split(",");
	
	var aprTerm36 = aprTermArr[0];
	var aprTerm48 = aprTermArr[1];
	var aprTerm60 = aprTermArr[2];
	var aprTerm72 = aprTermArr[3];

	if(checkStrFor(aprTerm36, "+")){
		aprTerm = aprTerm36;
		termLength = "36";
	}
	else if(checkStrFor(aprTerm48, "+")){
		aprTerm = aprTerm48;
		termLength = "48";
	}else if(checkStrFor(aprTerm60, "+")){
		aprTerm = aprTerm60;
		termLength = "60";
	}else{
		aprTerm = aprTerm72;
		termLength = "72";
	}

	aprTerm = aprTerm.replace('+','');
} 
    
function startAd(){
    handleDynamicData();

	//start to listen the loading process
	timer = setInterval(checkLoading, 500);
	
	var root = "https://services.serving-sys.com/custprojassets/prd/features/static/0368b9e.netsolvps.com/";
	
	if (checkStrFor(seriesImage, "noseries")){
		if(regionName=="NCA10"){
				seriesImage = root + "nc/html5/NC_300_noseries_staging.jpg";
		}else{
			seriesImage = root + getExternalFolderName()+"/html5/"+getExternalFolderName().toUpperCase()+"_300_noseries.jpg";
		}
			
		
	}

	//check for noseries
	for (var i in arr) {
		if(seriesName === arr[i]){
			//run static verion
			loadImg(seriesImage, document.getElementById("banner"));
			
			/*if((checkStrFor(seLogo, "https://", "http://", "ftp://") || seLogo === "event") && regionName !== "NCA10"){
				if(regionName == "CAT10"){
					
					if(modelYear=="2016"){
						loadImg(root + getExternalFolderName()+"/html5/logos/300x250_2016.png", document.getElementById("seLogoNoseries"));
					}else{
						loadImg(root + getExternalFolderName()+"/html5/logos/300x250_staging.png", document.getElementById("seLogoNoseries"));
					}
				}else{
					loadImg(root + getExternalFolderName()+"/html5/logos/300x250.png", document.getElementById("seLogoNoseries"));
				}
			}*/
			
			return;
		}
	}

	// get advanced version
	var xmlhttp = new XMLHttpRequest();
 
	xmlhttp.onreadystatechange = function() {
		if (xmlhttp.readyState == 4 ) {
			if(xmlhttp.status == 200){
				document.getElementById("banner").innerHTML = xmlhttp.responseText;
				eval(document.getElementById('eval').innerHTML);
			}
			else if(xmlhttp.status == 400) {
				console.log('There was an error 400');
			}
			else {
				console.log('Something else other than 200 was returned');
			}
		}
	}
	
    xmlhttp.open("GET", "region/"+getLocalFolderName()+".min.html", true);
    xmlhttp.send();
}

function addListeners(){
	document.getElementById("clickthroughButton").onmouseover = toggleCTA;
	document.getElementById("clickthroughButton").onmouseout = toggleCTA;

	if(disclaimer != ''){
		document.getElementById("disclaimerLink").style.display = "block";
		document.getElementById("disclaimer").innerHTML = "<p>"+disclaimer+"</p>";
		if(touchEvents()){
			document.getElementById("disclaimerLink").onclick = toggleDisclaimer;
			document.getElementById("disclaimer").onclick = toggleDisclaimer;
		}
		else{
			document.getElementById("disclaimerLink").onmouseover = toggleDisclaimer;
			document.getElementById("disclaimer").onmouseout = toggleDisclaimer;   
		}
	} 	
}

function touchEvents(){
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
}

function loadImg(url, obj){
    loadingList.push(obj);
	
	var img = new Image();
	
    img.onload = function() {
        obj.innerHTML = "";
		obj.appendChild(img);
    }
	
	img.src = url;
}

function checkLoading(){
        
    for(var i in loadingList){
        if(loadingList[i].innerHTML == "") return;
    }

    clearInterval(timer);

    document.getElementById("loader").style.display = "none";
    document.getElementById("seLogoNoseries").style.display = "block";
    document.getElementById("banner").style.display = "block";
}

function getLocalFolderName(){
	
	return checkStrFor(regionName, "BOS10", "CIN10", "WW10", "WWN10", "CAT10") ? "common" :
		   checkStrFor(regionName, "NCA10") ? "nc" :
		   checkStrFor(regionName, "SD10", "SDN10") ? "sd" :
		   checkStrFor(regionName, "SOC10") ? "sc" :
		   undefined;
}

function getExternalFolderName(){
	return checkStrFor(regionName, "BOS10") ? "ne" :
		   checkStrFor(regionName, "CIN10") ? "cn" :
		   checkStrFor(regionName, "WW10", "WWN10") ? "ww" :
		   checkStrFor(regionName, "CAT10") ? "cat" :
		   checkStrFor(regionName, "NCA10") ? "nc" :
		   checkStrFor(regionName, "SD10", "SDN10") ? "sd" :
		   checkStrFor(regionName, "SOC10") ? "sc" :
		   undefined;
}

function handleClickthroughButtonClick() {
    console.log("handleClickthroughButtonClick");
    EB.clickthrough();
}

function toggleDisclaimer(){
	var disclaimerClip = document.getElementById("disclaimer");
	disclaimerClip.className = disclaimerClip.className == "disclaimerHide" ? "disclaimerShow" : "disclaimerHide";
}

function toggleCTA(){
    var CTAClip = document.getElementById("CTA");
	CTAClip.className = CTAClip.className == "CTAout" ? "CTAin" : "CTAout";
}

function checkComma(num){
    num = num.replace('$', '');
    return (num.length < 4) ? num : num.substr(0,1)+","+num.substr(1,3);
}

function checkAPR(num){
	return num.slice(0, 3).replace(/\.0+/, "");
}